version: '3'

tasks:

  1st-run:
    dir: '{{.ROOT_DIR}}'
    silent: true
    desc: reset-precommit configration to bare minimal
    # vars:
    #   RESET_PRECOMMIT: false
    cmds:
      - |
        if [ "{{.RESET_PRECOMMIT}}" = "true" ]; then
          # taskfile dir vs root_dir
          if [ ! -f "{{.TASKFILE_DIR}}/.pre-commit-config.yaml" ]; then
          echo no\ file
          cat<<EOF>'{{.TASKFILE_DIR}}/.pre-commit-config.yaml'
          repos:
          - repo: https://github.com/pre-commit/pre-commit-hooks
            rev: v4.0.1
            hooks:
            - id: end-of-file-fixer
            - id: check-case-conflict
            - id: check-merge-conflict
            - id: detect-aws-credentials
              args: ['--allow-missing-credentials']
            # - id: detect-private-key
          - repo: local
            hooks:
            - id: run-custom-script
              name: Run /usr/bin/env task --list-all
              # entry: ./posts/pre-commit/pre-commit.sh
              entry: /usr/bin/env task --list-all
              language: script
              pass_filenames: false
              stages: [commit]
          - repo: https://github.com/gruntwork-io/pre-commit
            rev: v0.1.15
            hooks:
            - id: helmlint
        EOF
        fi
        fi
      - |
        if [ "{{.RESET_PRECOMMIT}}" = "true" ]; then
          # root_dir vs taskfile dir
          if [ ! -f "{{.ROOT_DIR}}/.pre-commit-config.yaml" ]; then
            cp "{{.TASKFILE_DIR}}/.pre-commit-config.yaml" "{{.ROOT_DIR}}/.pre-commit-config.yaml"
          else
            echo ".pre-commit-config.yaml already exists, skipping..."
          fi
        fi
      - task: run-all-files

      # too Naive ...
      #  - |
      #   if [ ! -f "{{.ROOT_DIR}}/.pre-commit-config.yaml" ]; then
      #     cp "{{.TASKFILE_DIR}}/.pre-commit-config.yaml" "{{.ROOT_DIR}}/.pre-commit-config.yaml"
      #   else
      #     echo ".pre-commit-config.yaml already exists, skipping..."
      #   fi
  
  gen-default-pre-commit-config:
    desc: create-the-base
    summary: an entry point we can extend on in the task system
    cmds:
      - |
        cat<<EOF>>'{{.TASKFILE_DIR}}/.pre-commit-config.yaml'
        repos:
        - repo: local
          hooks:
            - id: run-custom-script
              name: Run Custom Script
              entry: /usr/bin/env task --list-all
              language: script
              pass_filenames: false
              stages: [commit]
        EOF
      # - |
      #   cat<<EOF>'{{.TASKFILE_DIR}}/pre-commit.sh'
      #   #!/usr/bin/env bash
      #   task --list-all && exit 0
      #   EOF
      # - |
      #   cat<<EOF>'{{.TASKFILE_DIR}}/.pre-commit-config.yaml'
      #   repos:
      #   - repo: local
      #     hooks:
      #       - id: run-custom-script
      #         name: Run Custom Script
      #         entry: ./posts/pre-commit/pre-commit.sh
      #         language: script
      #         pass_filenames: false
      #         stages: [commit]
      #   EOF

  get:
    desc: "internal | exec - install pre-commit via homebrew"
    cmds:
    - echo "This might take a while on first-run ..."
    - pre-commit help &>/dev/null || brew install pre-commit

  install:
    desc: "internal | configure | pre-commit to local repo"
    deps: [get]
    cmds:
    - pre-commit install

  run:
    desc: "internal | execute | run-all pre-commit run on the staged files (files which are going to be commited)"
    cmds:
    - pre-commit run

  run-all-files:
    desc: "internal | execute | run-all pre-commit against all files"
    cmds:
    - pre-commit run --all-files
