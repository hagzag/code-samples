version: '3'

# silent: true



tasks:
  
  # utility tasks - a.k.a functions
  dependency_build:
    requires:
      vars:
      - CHART
      - CHART_FOLDER
      - VALUES_FILES
      - NAMESPACE
    cmds:
      - helm dependency build {{.CHART_FOLDER}} --skip-refresh
    desc: "Run Helm dependency build for {{.CHART_FOLDER}}"

  install:
    requires:
      vars:
      - CHART
      - CHART_FOLDER
      - VALUES_FILES
      - NAMESPACE
    desc: "Install Helm chart for {{.CHART_FOLDER}} in {{.NAMESPACE}} namespace"
    cmds:
      - helm upgrade --install {{.CHART}} -f {{.VALUES_FILES}} -n {{.NAMESPACE}} --create-namespace --wait {{.CHART_FOLDER}}

  template_apply:
    cmds:
      - helm template --include-crds -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}}  -n {{.NAMESPACE}} --no-hooks | kubectl -n {{.NAMESPACE}} apply -f -
      - helm template --include-crds -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}}  -n {{.NAMESPACE}} | kubectl -n {{.NAMESPACE}}  apply -f -
    desc: "Apply Helm template for {{.CHART_FOLDER}} in {{.CHART}} namespace"
  
  template_apply_dry_run:
    cmds:
      - helm template --include-crds -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}} --no-hooks | kubectl apply --dry-run=client -f -
      - helm template --include-crds -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}} | kubectl apply --dry-run=client -f -
    desc: "Apply Helm template for {{.CHART_FOLDER}} in {{.CHART}} namespace"

  template_delete:
    cmds:
      - helm template -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}} --no-hooks | kubectl -n {{.NAMESPACE}} delete -f -
    desc: "Apply Helm template for {{.CHART_FOLDER}} in {{.CHART}} namespace"

  template:
    cmds:
      - helm template -f {{.VALUES_FILES}} {{.CHART}} {{.CHART_FOLDER}}
    desc: "Apply Helm template for {{.CHART_FOLDER}} in $1 namespace"

  repo_add:
    requires:
      vars:
      - REPO_URL
      - CHART
    desc: "Add and update Helm repo: $1 -> {{.REPO_URL}}"
    cmds:
      - helm repo add {{.CHART}} {{.REPO_URL}}
      # - helm repo update
  
  
  # external-secrets:
  #   cmds:
  #     - template_apply infra/external-secrets external-secrets

  # repo:
  #   cmds:
  #     - repo_add argo https://argoproj.github.io/argo-helm

  # argocd:
  #   cmds:
  #     - task: dependency_build 
  #       vars:
  #         CHART_FOLDER: infra/argocd
  #         CHART: argocd

  # external-dns:
  #   cmds:
  #     - task: dependency_build 
  #       vars:
  #         CHART_FOLDER: infra/external-dns
  #         CHART: external-dns

  # cert-manager:
  #   cmds:
  #     - task: dependency_build 
  #       vars:
  #         CHART_FOLDER: infra/cert-manager
  #         CHART: cert-manager

  create-wrapper-chart:
    requires:
      vars:
      - APP_WRAPPER_NAME
      - APP_NAME
      - APP_REPO
      - APP_VERSION
    dir: '{{.ROOT_DIR}}/config/apps/'
    cmds:
      - echo "APP_WRAPPER_NAME '{{.APP_WRAPPER_NAME}}'"
      - mkdir -p '{{.APP_WRAPPER_NAME}}'
      - |
        cat<<EOF > '{{.APP_WRAPPER_NAME}}/Chart.yaml'
        apiVersion: v2
        name: '{{.APP_WRAPPER_NAME}}'
        description: A Helm chart for wrapping {{.APP_NAME}}
        version: 0.1.0
        appVersion: 0.1.0
        dependencies:
          - name: '{{.APP_NAME}}'
            version: '{{.APP_VERSION}}'
            repository: "{{.APP_REPO}}"
        EOF
