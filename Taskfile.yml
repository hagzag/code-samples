version: '3'

# silent: true

dotenv:
- .env

includes:
  # utils
  helm: ./config/tasks/helm.yaml
  templates: ./config/tasks/templates.yaml
  utils: ./config/tasks/utils.yaml
  # tests
  test: ./config/tasks/test.yaml
  # posts
  k3d: ./config/tasks/suites/k3d-intro/Taskfile.yaml
  production-rediness-external-dns: ./config/tasks/suites/production-rediness-series/external-dns/Taskfile.yaml
  coredns: ./config/tasks/suites/coredns/Taskfile.yaml
  
  ingress-nginx: ./config/tasks/ingress-nginx.yaml
  pre-commit: ./config/tasks/suites/pre-commit/Taskfile.yaml
  # common tools for this repo
  tools: ./config/tasks/tools.yaml

  # common tools foor configuration managment   
  
  reloader: ./config/tasks/reloader.yaml
  descheduler: ./config/tasks/descheduler.yaml
  reflector: ./config/tasks/reflector.yaml

  vault: ./config/tasks/suites/vault-eso/Taskfile.yaml
  sealed-secrets: ./config/tasks/sealed-secrets.yaml

  awx: ./config/tasks/suites/awx/Taskfile.yaml
  # applications / packages
  cicd-toolz: ./config/tasks/cicd-toolz.yaml
  # helm chart registry
  chartmeusem: ./config/tasks/chartmeusem.yaml
  
  # scaling
  goldilocks: ./config/tasks/suites/goldilocks/Taskfile.yaml

  # policy
  gatekeeper: ./config/tasks/suites/gatekeeper/Taskfile.yaml
  gatekeeper-pm: ./config/tasks/suites/gatekeeper-policy-manager/Taskfile.yaml

  # observability
  monitoring-n-logging: ./config/tasks/monitoring-n-logging.yaml

  # iac
  iac: ./config/tasks/suites/terraform/Taskfile.yaml

  # whoami-demo-app via nginx
  whoami: ./config/tasks/whoami.yaml
  

  # aws-sso
  aws-sso: ./config/tasks/suites/aws-sso/Taskfile.yaml
  
  # argo-workflows
  argocd: ./config/tasks/argo-cd.yaml
  argo-workflows: ./config/tasks/argo-workflows.yaml
  minio: ./config/tasks/minio.yaml

tasks:

  cluster-create:
    desc: Start the k3d cluster
    cmds:
    - task: k3d:cluster-template
    - task: k3d:cluster-create
    - task: k3d:dns
    - task: k3d:certs

  external-dns:
    desc: Run the external-dns project
    cmds:
    - task: production-rediness-external-dns:default

  coredns:
    desc: Run the codedns project
    cmds:
    - task: coredns:dns-test

  argocd:
    desc: Deploy argocd project
    cmds:
    - task: argocd:install
    - task: argocd:secret
    - task: argocd:repo

  ingress-nginx:
    desc: Deploy nginx project
    cmds:
    - task: ingress-nginx:install

  config-managment:
    desc: Run all config-managment tasks
    cmds:
    - task: reloader:install
    - task: reflector:install
    - task: descheduler:install
  
  sealed-secrets:
    desc: Run all sealed-secrets tasks
    cmds:
    - task: cluster-create
    - task: sealed-secrets:install-kubeseal
    - task: sealed-secrets:create-private-key
    - kubectl apply -k .config/sealed-secrets
    - task: sealed-secrets:local-apply

  goldilocks-minimal:
    desc: Run the goldilocks project
    cmds:
    - task: cluster-create
    - task: ingress-nginx:install
    - task: reflector:install
    - task: reloader:install
    - task: goldilocks:install
    # - open https://goldilocks.k8s.localhost

  opa-gatekeeper:
    desc: Run the opa-gatekeeper project
    cmds:
    - task: goldilocks-minimal
    - task: gatekeeper:full-run
    - task: gatekeeper-pm:full-run
    # - open https://gpm.k8s.localhost
  
  opa-gatekeeper-demo:
    - task: gatekeeper:create-constraint-teample
    - task: gatekeeper:create-constraint
    - task: gatekeeper:test-constraint-expect-failure
    - task: gatekeeper:test-constraint-expect-success
  
  opa-gatekeeper-demo-cleanup:
    - task: gatekeeper:delete-constraint
    - task: gatekeeper:delete-constraint-template

  argo-workflows:
    desc: Run the argo-workflows project
    cmds:
    - task: config-managment
    - task: ingress-nginx
    - task: minio:full-run
    # - task: argo-wokrflows:full-run
    # - task: argo-wokrflows:secret
    # - task: argo-wokrflows:run-workflow  

  run-awx:
    vars:
      ADDITIONAL_HOSTS: "awx.k8s.localhost"
    desc: Run the awx project
    cmds:
    # - task: cluster-create
    # - kubectl apply -k .config/tls
    # - task: argocd
    # - task: config-managment
    # - task: ingress-nginx
    # - task: awx:secret
    # - task: awx:install
    - task: awx:run-awx-playbook

  run-tests:
    desc: Run tests
    cmds:
      - task: test:helm-wrapper

  destroy-env:
    desc: Destroy the k3d cluster
    cmds:
    - k3d cluster delete $CLUSTER_NAME

  help:
    desc: Show help
    cmds:
    - task --list
